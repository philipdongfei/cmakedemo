CMAKE_MINIMUM_REQUIRED(VERSION 3.3)

PROJECT(HELLO)
ENABLE_LANGUAGE(CXX C)

SET(SRC_LIST main.c)
MESSAGE(STATUS "This is BINARY dir " ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "This is SOURCE dir " ${PROJECT_SOURCE_DIR})
option (DEBUG_BUILD "Build with extra debug printf message." )

if (DEBUG_BUILD)
    add_definitions(-DDEBUG_BUILD)
endif(DEBUG_BUILD)
ADD_EXECUTABLE(hello ${SRC_LIST})

configure_file (
    ${PROJECT_SOURCE_DIR}/projectConfigure.h.in
    ${PROJECT_SOURCE_DIR}/projectConfigure.h)

if (HAS_FOOBAR_CALL)
    message("HAS_FOOBAR_CALL is true")
endif(HAS_FOOBAR_CALL)

install (DIRECTORY  DESTINATION share/myproject/user)
install (DIRECTORY data/scripts DESTINATION share/myproject
         FILE_PERMISSIONS
         OWNER_READ OWNER_EXECUTE OWNER_WRITE
         GROUP_READ GROUP_EXECUTE
         WORLD_READ WORLD_EXECUTE
         DIRECTORY_PERMISSIONS
         OWNER_READ OWNER_EXECUTE OWNER_WRITE
         GROUP_READ GROUP_EXECUTE GROUP_WRITE
         WORLD_READ WORLD_EXECUTE)
install (DIRECTORY data/icons DESTINATION share/myproject
    PATTERN "CVS" EXCLUDE
    PATTERN "*.txt"
      PERMISSIONS OWNER_READ OWNER_WRITE
    PATTERN "*.sh"
      PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE)
install (SCRIPT message.cmake)

